// <auto-generated />
using System;
using Desafio.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Desafio.Infra.Migrations
{
    [DbContext(typeof(DesafioContext))]
    partial class DesafioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Desafio.Domain.Entities.Loja", b =>
                {
                    b.Property<int>("LojaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dono")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Dono");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.HasKey("LojaId");

                    b.ToTable("Loja");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.TipoTransacao", b =>
                {
                    b.Property<int>("TipoTransacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Natureza")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Natureza");

                    b.Property<string>("Sinal")
                        .HasColumnType("char(1)")
                        .HasColumnName("Sinal");

                    b.HasKey("TipoTransacaoId");

                    b.ToTable("TipoTransacao");

                    b.HasData(
                        new
                        {
                            TipoTransacaoId = 1,
                            Descricao = "Débito",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 2,
                            Descricao = "Boleto",
                            Natureza = "Saída",
                            Sinal = "-"
                        },
                        new
                        {
                            TipoTransacaoId = 3,
                            Descricao = "Financiamento",
                            Natureza = "Saída",
                            Sinal = "-"
                        },
                        new
                        {
                            TipoTransacaoId = 4,
                            Descricao = "Crédito",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 5,
                            Descricao = "Recebimento Empréstimo",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 6,
                            Descricao = "Vendas",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 7,
                            Descricao = "Recebimento TED",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 8,
                            Descricao = "Recebimento DOC",
                            Natureza = "Entrada",
                            Sinal = "+"
                        },
                        new
                        {
                            TipoTransacaoId = 9,
                            Descricao = "Aluguel",
                            Natureza = "Saída",
                            Sinal = "-"
                        });
                });

            modelBuilder.Entity("Desafio.Domain.Entities.TransacaoItem", b =>
                {
                    b.Property<int>("TransacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cartao")
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Cartao");

                    b.Property<string>("CpfBeneficiario")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CpfBeneficiario");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LojaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoTransacaoId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("Decimal(15,2)")
                        .HasColumnName("Valor");

                    b.HasKey("TransacaoId");

                    b.HasIndex("LojaId");

                    b.HasIndex("TipoTransacaoId");

                    b.ToTable("TransacaoItem");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.TransacaoItem", b =>
                {
                    b.HasOne("Desafio.Domain.Entities.Loja", "Loja")
                        .WithMany("TransacaoItens")
                        .HasForeignKey("LojaId");

                    b.HasOne("Desafio.Domain.Entities.TipoTransacao", "TipoTransacao")
                        .WithMany("TransacaoItens")
                        .HasForeignKey("TipoTransacaoId");

                    b.Navigation("Loja");

                    b.Navigation("TipoTransacao");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.Loja", b =>
                {
                    b.Navigation("TransacaoItens");
                });

            modelBuilder.Entity("Desafio.Domain.Entities.TipoTransacao", b =>
                {
                    b.Navigation("TransacaoItens");
                });
#pragma warning restore 612, 618
        }
    }
}
